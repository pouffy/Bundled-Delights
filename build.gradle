buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven {
            url "https://repo.spongepowered.org/repository/maven-public/"
            // content { includeGroup "org.spongepowered" }
        }
        mavenCentral()    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: "${mixingradle_version}"
        classpath "org.parchmentmc:librarian:${librarian_version}"
    }
}
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: "org.spongepowered.mixin"
mixin {
    add sourceSets.main, "bundledelight.refmap.json"
}

version = "${mc_version}-${mod_version}"
group = 'com.pouffy.bundledelight' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'bundledelight'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${mc_version}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'bundledelight'
            mods {
                bundledelight {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            arg "-mixin.config=bundledelight.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'bundledelight'
            mods {
                bundledelight {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'bundledelight'
            mods {
                bundledelight {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'bundledelight', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                bundledelight {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // JEI
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // CraftTweaker
        name = "BlameJared"
        url = "https://maven.blamejared.com/"
    }
    maven { url "https://maven.jaackson.me" }
    maven { url "https://www.cursemaven.com" }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven { url "https://modmaven.k-4u.nl" }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = 'Thermal Maven'
        url = 'https://maven.covers1624.net/'
    }
}
sourceSets.main.resources {
    srcDirs += 'src/generated/resources'
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    compileOnly fg.deobf("mezz.jei:jei-$mc_version-common-api:$jei_version")
    compileOnly fg.deobf("mezz.jei:jei-$mc_version-forge-api:$jei_version")
    implementation fg.deobf("mezz.jei:jei-$mc_version-forge:$jei_version")

    implementation fg.deobf("curse.maven:${project.farmersRespite}")
    implementation fg.deobf("curse.maven:${project.brewNChew}")

    //Farmers Delight & Its Addons [Fsr Umpazz hasn't made modrinth pages for Respite or Brewin' N Chewin' yet]
    implementation fg.deobf("maven.modrinth:farmers-delight:${project.farmersDelight}")
    implementation fg.deobf("maven.modrinth:miners-delight:${project.minersDelight}")

    //Abnormals mods
    implementation fg.deobf("maven.modrinth:blueprint:${project.blueprint}")
    implementation fg.deobf("maven.modrinth:neapolitan:${project.neapolitan}")
    implementation fg.deobf("maven.modrinth:abnormals-delight:${project.abnormalsDelight}")
    implementation fg.deobf("maven.modrinth:respiteful:${project.respiteful}")

    //Thermal mods
    implementation fg.deobf("com.teamcofh:cofh_core:${mc_version}-${cofhCore}.+")
    implementation fg.deobf("com.teamcofh:thermal_core:${mc_version}-${thermalCore}.+")
    implementation fg.deobf("com.teamcofh:thermal_expansion:${mc_version}-${thermalExpansion}.+")

    // Examples using mod jars from ./libs
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "bundledelight",
                "Specification-Vendor"    : "PouffyDev",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : "PouffyDev",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
